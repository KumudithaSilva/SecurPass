name: Python Continuous Testing and SonarCloud

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.9

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8 linting
        run: |
          flake8 .

  pytest:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest -v tests/test_main.py

  sonar:
    runs-on: ubuntu-latest
    needs: pytest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.9

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    runs-on: windows-latest
    needs: sonar
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pyinstaller

      - name: Build Python package (wheel and sdist)
        run: python -m build

      - name: Build Windows executable with PyInstaller (include assets)
        shell: cmd
        run: |
          pyinstaller securpass/main.py --onefile --noconsole --name SecurePass --icon=securpass/assets/images/securepass_main.ico ^
            --add-data "securpass/assets/images;assets/images"

      - name: Show dist folder contents
        run: dir dist

      - name: Verify dist folder before upload
        run: dir dist /b

      - name: Upload Python package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: dist/*.whl

      - name: Upload Windows executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: SecurePass-exe
          path: dist/*.exe
















